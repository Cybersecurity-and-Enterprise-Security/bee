default:
  image: $BUILDER_IMAGE_GENERAL

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  DOCKER_TLS_CERTDIR: ""
  BUILDER_IMAGE_GENERAL: ${CI_REGISTRY_IMAGE}/builder:latest
  IMAGE_NAME: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:latest

stages:
  - build
  - lint
  - test
  - docker

build-builder-image:
  stage: build
  image: docker:latest
  needs: []
  services:
    - name: docker:dind
      alias: docker
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $BUILDER_IMAGE_GENERAL -f builder/Dockerfile builder/
  when: manual

compile:
  stage: build
  needs: []
  script:
    - make build
  artifacts:
    paths:
      - bee
    expire_in: 1 week

golangci-lint:
  stage: lint
  needs: []
  script:
    - make lint

test:
  stage: test
  needs: []
  script:
    - make coverhtml
  artifacts:
    paths:
      - coverage_unit.html
    expire_in: 1 week
    expose_as: coverageReport

.docker-template: &docker-template
  stage: docker
  image: docker:latest
  needs:
    - compile
    - golangci-lint
    - test
  services:
    - name: docker:dind
      alias: docker
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx create --use
  script:
    # Build images
    - docker buildx build
      -t $IMAGE_NAME
      --platform "$DOCKER_PLATFORM"
      -f ./build/Dockerfile
      --push .
    # Extract binaries for release
    - docker buildx build
      -t $IMAGE_NAME
      --platform "$DOCKER_PLATFORM"
      -f ./build/Dockerfile
      --target=binary --output bin .
  artifacts:
    paths:
      - bin/

docker-linux-amd64:
  <<: *docker-template
  except:
    - main
  variables:
    DOCKER_PLATFORM: "linux/amd64"

docker-branch-all-arch:
  <<: *docker-template
  variables:
    DOCKER_PLATFORM: "linux/arm/v7,linux/arm/v6,linux/arm64,linux/amd64"
  when: manual

docker-main-all-arch:
  <<: *docker-template
  only:
    - main
  variables:
    DOCKER_PLATFORM: "linux/arm/v7,linux/arm/v6,linux/arm64,linux/amd64"
