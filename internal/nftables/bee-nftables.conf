define listen_ip = "%s"
define if_wireguard = "wireguard0"
# This connmark is added to each conntrack entry that is "local" to the bee.
# A connection is "local" if it should not be forwarded to honeypots. Such connections are to an excluded/open port
# like ssh to the bee machine or originating from the bee, like HTTPS connections to the beekeeper API or wireguard to beehives.
define connmark_local = 0x9
# This packet mark indicates that an outgoing packet comes from the honeypots and should not be considered "local".
# The mark is set in setup.go on all packets from the inject socket which outputs traffic from the honeypots.
define mark_honeypots_outgoing = 0x10

# Ensure table is fresh
table inet bee_filter
delete table inet bee_filter

table inet bee_filter {
    set open_tcp_ports {
        typeof tcp dport
    }
    set open_udp_ports {
        typeof udp dport
    }

    chain bee_input {
        # We choose filter-1 as the priority to ensure these rules are applied
        # before the usual rules.
        type filter hook input priority filter - 1; policy accept;

        # Only apply our rules to the interface we are listening on
        ip daddr $listen_ip jump bee_chain
    }
    chain bee_chain {
        # Accept local connections
        ct state {established, related} ct mark $connmark_local counter accept

        # Keep discovered open TCP ports
        tcp dport @open_tcp_ports counter jump accept_local
        # Keep discovered open UDP ports
        udp dport @open_udp_ports counter jump accept_local

        # Send the rest to userspace, stop kernel processing.
        # Group ID 833 is arbitrary but must match the one in setup.go.
        # Conntrack does not see these packets despite them having passed through the first hook.
        meta l4proto {icmp, tcp, udp} counter log group 833 drop
    }

    chain local_output {
        type filter hook output priority filter - 1; policy accept;

        # Anything that does not come from the inject socket is considered a local connection
        meta mark != $mark_honeypots_outgoing counter jump accept_local
    }

    chain bee_output {
        type filter hook output priority raw; policy accept;
        # Do not track packets to attacker, saves memory in conntrack table
        meta mark $mark_honeypots_outgoing notrack
    }

    chain bee_prerouting {
        type filter hook prerouting priority raw; policy accept;
        # Do not track packets from the beehive to the attacker.
        # Such packets come from the beehive through wireguard, and no other packets should come from that interface.
        iifname $if_wireguard notrack
    }

    # Jump target for local connections, i.e. those that should not be forwarded to the beehive
    chain accept_local {
        ct mark set $connmark_local accept
    }
}
